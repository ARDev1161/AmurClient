name: AmurClient build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
        
    - name: Extract tag name
      id: tag
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          return context.payload.ref.replace(/\/refs\/tags\//, '');

    - name: Make all workflow scripts executable
      run: chmod -R a+x .github/workflows/scripts
      
    - name: Setup libconfig
      run: sudo ./.github/workflows/scripts/libconfig-install.sh

    - name: Setup ProtoBuf & gRPC
      run: sudo ./.github/workflows/scripts/grpc-global-install.sh

    - name: Build AmurClient
      # Build your program with the given configuration
      run: sudo ./.github/workflows/scripts/AmurClient-build.sh
    
    - name: Cache AmurClient
      uses: actions/cache@v2
      with:
        path: /home/runner/work/AmurClient
        key: ${{ runner.os }}-AmurClient

    #- name: Test
      #working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}

    - name: Debian packaging
      uses: kentik/pkg@v1.0.0-rc7
      with:
        name: AmurClient
        version: ${{ steps.tag.outputs.result }}
        arch: x86_64 #aarch64
        format: deb
        package: ./.github/workflows/package/deb.yaml

    - name: notification 
      if: cancelled() == false 
      uses: xinthink/action-telegram@v1.1 
      with: 
        botToken: ${{ secrets.BotToken }} 
        chatId: ${{ secrets.ChatID }} 
        jobStatus: ${{ job.status }}
